<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://ttwoly.github.io/post/index.xml</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jan 2017 11:16:10 +0800</lastBuildDate>
    <atom:link href="https://ttwoly.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>second</title>
      <link>https://ttwoly.github.io/post/second/</link>
      <pubDate>Mon, 23 Jan 2017 11:16:10 +0800</pubDate>
      
      <guid>https://ttwoly.github.io/post/second/</guid>
      <description>

&lt;h3 id=&#34;hello-hugo&#34;&gt;Hello Hugo&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;aaa&lt;/li&gt;
&lt;li&gt;bbb&lt;/li&gt;
&lt;li&gt;ccc&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>first</title>
      <link>https://ttwoly.github.io/post/first/</link>
      <pubDate>Wed, 06 Jan 2016 18:12:14 +0800</pubDate>
      
      <guid>https://ttwoly.github.io/post/first/</guid>
      <description>

&lt;p&gt;最近在看许晓斌（Juven Xu）编写的《Maven实战》，书中提到Maven远程部署项目到服务器。刚好最近做的项目在测试阶段，不过测试环境用的服务器是Jboss（jboss-as-7.1.0.Final），遂开始折腾。以jboss-as-7.1.1.Final为例。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;一-启动jboss&#34;&gt;一、启动Jboss&lt;/h3&gt;

&lt;p&gt;安装Jboss在Linux下解压即可。启动包括standalone模式和domain模式。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;standalone模式&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;简单开启服务器的命令：进入到 bin 目录下，执行命令。&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;    ./standalone.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这种开启服务器的方式有个缺点，当你的命令窗口关闭后，服务自动down了。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;让服务器开启后在后台运行：进入到bin目录下，执行命令。&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;    nohup ./standalone.sh&amp;amp;
            或
    nohup ./standalone.sh run&amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样服务器就会在后台运行，即使关闭命令窗口，服务器依然运行。服务需关闭时，采用&lt;code&gt;ps -ef | grep jboss&lt;/code&gt;，查看进程号，然后&lt;code&gt;kill -9 进程号&lt;/code&gt;，再重启。&lt;/p&gt;

&lt;p&gt;执行nohup命令，控制台logout后，进程仍然继续运行，起到守护进程的作用（虽然它不是严格意义上的守护进程）。原程序的的标准输出被自动改向到当前目录下的nohup.out文件，起到了log的作用，实现了完整的守护进程功能。
附：&lt;a href=&#34;http://www.cnblogs.com/kapok/archive/2005/11/23/283108.html&#34;&gt;简单而有用的nohup命令&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;domain模式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;该模式暂不叙述。&lt;/p&gt;

&lt;h3 id=&#34;二-配置jboss&#34;&gt;二、配置Jboss&lt;/h3&gt;

&lt;p&gt;默认Jboss只绑定在本地&lt;code&gt;127.0.0.1&lt;/code&gt;外网无法访问。需配置standalone的配置文件。&lt;/p&gt;

&lt;p&gt;第一步，打开&lt;code&gt;${JBOSS_HOME}/standalone/configuration/standalone.xml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;第二步，查找到如下配置&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;interfaces&amp;gt;
    &amp;lt;interface name=&amp;quot;management&amp;quot;&amp;gt;
         &amp;lt;inet-address value=&amp;quot;${jboss.bind.address.management:127.0.0.1}&amp;quot;/&amp;gt;
    &amp;lt;/interface&amp;gt;
    &amp;lt;interface name=&amp;quot;public&amp;quot;&amp;gt;
        &amp;lt;inet-address value=&amp;quot;${jboss.bind.address:127.0.0.1}&amp;quot;/&amp;gt;
    &amp;lt;/interface&amp;gt;
&amp;lt;/interfaces&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将&lt;code&gt;127.0.0.1&lt;/code&gt;改成&lt;code&gt;0.0.0.0&lt;/code&gt;，这样外网就能访问Jboss，同时可以进入管理模式。&lt;/p&gt;

&lt;p&gt;第三步，设置URI编码，将以下内容插入到&lt;code&gt;standalone.xml&lt;/code&gt;文件中&lt;code&gt;&amp;lt;extensions&amp;gt;&amp;lt;/extensions&amp;gt;&lt;/code&gt;节点之后。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;system-properties&amp;gt;
     &amp;lt;property name=&amp;quot;org.apache.catalina.connector.URI_ENCODING&amp;quot; value=&amp;quot;UTF-8&amp;quot;/&amp;gt;
     &amp;lt;property name=&amp;quot;org.apache.catalina.connector.USE_BODY_ENCODING_FOR_QUERY_STRING&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;/system-properties&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第四步，保存重启。&lt;/p&gt;

&lt;h3 id=&#34;三-部署jboss&#34;&gt;三、部署Jboss&lt;/h3&gt;

&lt;p&gt;如下图中描述了部署应用的四种方式：
&lt;img src=&#34;http://twentwo.cn/usr/uploads/2015/07/1401213823.png&#34; alt=&#34;20131005120052140.png&#34; /&gt;
- Administration UI Console
- Command Line Console
- Maven Plugin
- copy&lt;/p&gt;

&lt;p&gt;在此之前我们建立一个初始化管理账户，进入&lt;code&gt;${JBOSS_HOME}/bin&lt;/code&gt;下，执行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ./add-user.sh 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;选择Management User，如下图
&lt;img src=&#34;http://twentwo.cn/usr/uploads/2015/07/1485886833.jpg&#34; alt=&#34;20131004220923734.jpg&#34; /&gt;
如上，在提示输入username和password时输入相应的用户名和密码，我们随后会使用它登录管理控制台。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Administration UI Console部署&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;访问&lt;code&gt;http://127.0.0.1:9990/console&lt;/code&gt;（本地）或&lt;code&gt;http://serverIP:9990/console&lt;/code&gt;（外网）进入管理界面，该模式是图形化界面，不再赘述。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Command Line Console部署&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;执行&lt;code&gt;./jboss-cli.sh&lt;/code&gt;进入到Command Line Console界面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[twen@localhost bin]$ ./jboss-cli.sh  
You are disconnected at the moment. Type &#39;connect&#39; to connect to the server or &#39;help&#39; for the list of supported commands.  
[disconnected /] connect   
[standalone@localhost:9999 /]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用deploy命令部署XXX.war&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[standalone@localhost:9999 /] deploy /dir/target/XXX.war
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样使用undeploy&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[standalone@localhost:9999 /] undeploy XXX.war
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Maven Plugin&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;利用插件前先执行&lt;code&gt;mvn clean package&lt;/code&gt;打包，确保在&lt;code&gt;target&lt;/code&gt;目录下有war存在。
- jboss-as-maven-plugin&lt;/p&gt;

&lt;p&gt;配置Maven&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;plugin&amp;gt;
  &amp;lt;groupId&amp;gt;org.jboss.as.plugins&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;jboss-as-maven-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;7.1.1.Final&amp;lt;/version&amp;gt;
  &amp;lt;configuration&amp;gt;
	&amp;lt;hostname&amp;gt;serverIP&amp;lt;/hostname&amp;gt;
	  &amp;lt;port&amp;gt;9999&amp;lt;/port&amp;gt;
	  &amp;lt;username&amp;gt;user&amp;lt;/username&amp;gt;
	&amp;lt;password&amp;gt;pass&amp;lt;/password&amp;gt;
  &amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;cargo-maven2-plugin&lt;code&gt;*荐&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maven配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;plugin&amp;gt;
  &amp;lt;groupId&amp;gt;org.codehaus.cargo&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;cargo-maven2-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.4.14&amp;lt;/version&amp;gt;
  &amp;lt;configuration&amp;gt;
	&amp;lt;!-- Container configuration --&amp;gt;
	&amp;lt;container&amp;gt;
		&amp;lt;timeout&amp;gt;60000&amp;lt;/timeout&amp;gt; &amp;lt;!-- 1 minutes --&amp;gt;
		&amp;lt;containerId&amp;gt;jboss71x&amp;lt;/containerId&amp;gt;
		&amp;lt;type&amp;gt;remote&amp;lt;/type&amp;gt;
	&amp;lt;/container&amp;gt;

	&amp;lt;!-- Configuration to use with the container --&amp;gt;
	&amp;lt;configuration&amp;gt;
		&amp;lt;type&amp;gt;runtime&amp;lt;/type&amp;gt;
		&amp;lt;properties&amp;gt;
			&amp;lt;cargo.hostname&amp;gt;serverIP&amp;lt;/cargo.hostname&amp;gt;
			&amp;lt;cargo.jboss.management-native.port&amp;gt;9999&amp;lt;/cargo.jboss.management-native.port&amp;gt;
			&amp;lt;cargo.remote.username&amp;gt;user&amp;lt;/cargo.remote.username&amp;gt;
			&amp;lt;cargo.remote.password&amp;gt;pass&amp;lt;/cargo.remote.password&amp;gt;
		&amp;lt;/properties&amp;gt;
	&amp;lt;/configuration&amp;gt;
	&amp;lt;!-- Deployer configuration --&amp;gt;
	&amp;lt;deployer&amp;gt;
		&amp;lt;type&amp;gt;remote&amp;lt;/type&amp;gt;
	&amp;lt;/deployer&amp;gt;
  &amp;lt;/configuration&amp;gt;
  &amp;lt;dependencies&amp;gt;
	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;org.jboss.as&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;jboss-as-controller-client&amp;lt;/artifactId&amp;gt;
		&amp;lt;version&amp;gt;7.1.0.Final&amp;lt;/version&amp;gt;
	&amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
&amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样利用Maven Plugin就可以执行&lt;code&gt;mvn jboss-as:deploy（mvn cargo:deploy）&lt;/code&gt;等命令了。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;copy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;拷贝war包到&lt;code&gt;${JBOSS_HOME}/standalone/deployments&lt;/code&gt;目录，在该目录下会创建&lt;code&gt;war包名.dodeploy&lt;/code&gt;文件，说明正执行部署，完成后会生成&lt;code&gt;war包名.deployed&lt;/code&gt;文件,说明部署成功。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;四-遇到的坑&#34;&gt;四、遇到的坑&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;没在配置文件中修改端口的时候执行&lt;code&gt;mvn jboss-as:deploy&lt;/code&gt;，报错log如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Could not connect to remote://serverIP:9999. The connection timed out...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法见&lt;code&gt;二、配置Jboss&lt;/code&gt;第二步。&lt;code&gt;${jboss.bind.address.management:127.0.0.1}&lt;/code&gt;将&lt;code&gt;127.0.0.1&lt;/code&gt;改成&lt;code&gt;0.0.0.0&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;远程部署后，当Jboss启动时，应用报错，但Jboss仍然启动了。这时候将&lt;code&gt;XXX.war&lt;/code&gt;的文件删除，在此启动Jboss报错如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Host Controller] 09:03:13,042 ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) JBAS014613: Operation (&amp;quot;deploy&amp;quot;) failed - address: ([(&amp;quot;deployment&amp;quot; =&amp;gt; &amp;quot;XXX.war&amp;quot;)]) - failure description: &amp;quot;JBAS010876: No deployment content with hash 5f870cae18c7f6f29b8964e18895199c3754de09 is available in the deployment content repository for deployment &#39;ez-message.war&#39;. This is a fatal boot error. To correct the problem, either restart with the --admin-only switch set and use the CLI to install the missing content or remove it from the configuration, or remove the deployment from the xml configuraiton file and restart.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法，修改&lt;code&gt;${JBOSS_HOME}/standalone/configuration/standalone.xml&lt;/code&gt;配置文件，把&lt;code&gt;&amp;lt;deployments/&amp;gt;&lt;/code&gt;内容删除。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;deployments&amp;gt;
 &amp;lt;deployment name=&amp;quot;XXX.war&amp;quot; runtime-name=&amp;quot;XXX.war&amp;quot;/&amp;gt;
&amp;lt;/deployments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;注：&lt;/code&gt;远程部署时将war包上传至&lt;code&gt;${JBOSS_HOME}/standalone/data/content&lt;/code&gt;目录下。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>